[{"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/index.js":"1","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/App.js":"2","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/serviceWorker.js":"3","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/polyfill.js":"4","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/assets/icons/index.js":"5","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/pages/page500/Page500.js":"6","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/pages/page404/Page404.js":"7","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/pages/register/Register.js":"8","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/assets/icons/logo-negative.js":"9","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/assets/icons/sygnet.js":"10","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/assets/icons/logo.js":"11","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/routes.js":"12","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/icons/flags/Flags.js":"13","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/icons/brands/Brands.js":"14","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/icons/coreui-icons/CoreUIIcons.js":"15","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/index.js":"16","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/index.js":"17","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/auth.constants.js":"18","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/alert.constants.js":"19","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/url.constants.js":"20","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/auth.reducers.js":"21","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/sidebar.constants.js":"22","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/sidebar.reducers.js":"23","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/TheLayout.js":"24","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/index.js":"25","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheSidebar.js":"26","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeaderDropdownNotif.js":"27","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeaderDropdownTasks.js":"28","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeaderDropdownMssg.js":"29","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeaderDropdown.js":"30","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeader.js":"31","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheFooter.js":"32","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheContent.js":"33","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/_nav.js":"34","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/Dashboard.js":"35","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/Distribusi.js":"36","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/Login.js":"37","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/index.js":"38","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/alert.actions.js":"39","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/auth.actions.js":"40","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/alert.reducers.js":"41","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/distribusi.constants.js":"42","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/config.constants.js":"43","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/distribusi.reducers.js":"44","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/distribusi.actions.js":"45","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/Sampel.js":"46","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/sampel.constants.js":"47","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/sampel.reducers.js":"48","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/sampel.actions.js":"49","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/SampelCreate.js":"50","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/SampelEdit.js":"51","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/charts/MainChartExample.js":"52","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/widgets/WidgetsDropdown.js":"53","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/charts/ChartLineSimple.js":"54","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/DistribusiEdit.js":"55"},{"size":999,"mtime":1609939417315,"results":"56","hashOfConfig":"57"},{"size":3812,"mtime":1609137447093,"results":"58","hashOfConfig":"57"},{"size":4686,"mtime":1607966133000,"results":"59","hashOfConfig":"57"},{"size":1895,"mtime":1607966133000,"results":"60","hashOfConfig":"57"},{"size":3813,"mtime":1607966133000,"results":"61","hashOfConfig":"57"},{"size":1313,"mtime":1607966133000,"results":"62","hashOfConfig":"57"},{"size":1294,"mtime":1607966133000,"results":"63","hashOfConfig":"57"},{"size":2864,"mtime":1607966133000,"results":"64","hashOfConfig":"57"},{"size":6933,"mtime":1607966133000,"results":"65","hashOfConfig":"57"},{"size":978,"mtime":1607966133000,"results":"66","hashOfConfig":"57"},{"size":6920,"mtime":1607966133000,"results":"67","hashOfConfig":"57"},{"size":1629,"mtime":1609993607486,"results":"68","hashOfConfig":"57"},{"size":441,"mtime":1609939943685,"results":"69","hashOfConfig":"57"},{"size":821,"mtime":1609939919439,"results":"70","hashOfConfig":"57"},{"size":453,"mtime":1609939933445,"results":"71","hashOfConfig":"57"},{"size":916,"mtime":1608956146260,"results":"72","hashOfConfig":"57"},{"size":251,"mtime":1608955913578,"results":"73","hashOfConfig":"57"},{"size":308,"mtime":1608206841672,"results":"74","hashOfConfig":"57"},{"size":139,"mtime":1608207163165,"results":"75","hashOfConfig":"57"},{"size":70,"mtime":1608645771950,"results":"76","hashOfConfig":"57"},{"size":719,"mtime":1608207316521,"results":"77","hashOfConfig":"57"},{"size":79,"mtime":1608210563736,"results":"78","hashOfConfig":"57"},{"size":317,"mtime":1608210579540,"results":"79","hashOfConfig":"57"},{"size":1290,"mtime":1608647145807,"results":"80","hashOfConfig":"57"},{"size":603,"mtime":1608382306845,"results":"81","hashOfConfig":"57"},{"size":1455,"mtime":1608382295929,"results":"82","hashOfConfig":"57"},{"size":2543,"mtime":1608382300580,"results":"83","hashOfConfig":"57"},{"size":2253,"mtime":1608382301765,"results":"84","hashOfConfig":"57"},{"size":4788,"mtime":1608382298956,"results":"85","hashOfConfig":"57"},{"size":1352,"mtime":1608646846259,"results":"86","hashOfConfig":"57"},{"size":2080,"mtime":1608382295493,"results":"87","hashOfConfig":"57"},{"size":426,"mtime":1608443605392,"results":"88","hashOfConfig":"57"},{"size":1095,"mtime":1608382284082,"results":"89","hashOfConfig":"57"},{"size":1174,"mtime":1610010845313,"results":"90","hashOfConfig":"57"},{"size":2115,"mtime":1609939655174,"results":"91","hashOfConfig":"57"},{"size":4945,"mtime":1610009656709,"results":"92","hashOfConfig":"57"},{"size":4162,"mtime":1608472925894,"results":"93","hashOfConfig":"57"},{"size":137,"mtime":1608956239832,"results":"94","hashOfConfig":"57"},{"size":399,"mtime":1608207134505,"results":"95","hashOfConfig":"57"},{"size":847,"mtime":1608648705902,"results":"96","hashOfConfig":"57"},{"size":554,"mtime":1608474723260,"results":"97","hashOfConfig":"57"},{"size":429,"mtime":1608955722660,"results":"98","hashOfConfig":"57"},{"size":147,"mtime":1608648920227,"results":"99","hashOfConfig":"57"},{"size":475,"mtime":1608649108580,"results":"100","hashOfConfig":"57"},{"size":2270,"mtime":1610002144956,"results":"101","hashOfConfig":"57"},{"size":5241,"mtime":1610002187208,"results":"102","hashOfConfig":"57"},{"size":507,"mtime":1609148705772,"results":"103","hashOfConfig":"57"},{"size":690,"mtime":1609148805201,"results":"104","hashOfConfig":"57"},{"size":2880,"mtime":1609995518727,"results":"105","hashOfConfig":"57"},{"size":5817,"mtime":1610010960190,"results":"106","hashOfConfig":"57"},{"size":6522,"mtime":1609521889866,"results":"107","hashOfConfig":"57"},{"size":2421,"mtime":1609127538285,"results":"108","hashOfConfig":"57"},{"size":2435,"mtime":1609127921349,"results":"109","hashOfConfig":"57"},{"size":3294,"mtime":1607966133000,"results":"110","hashOfConfig":"57"},{"size":6331,"mtime":1610009253411,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1vsofxn",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"114"},"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/index.js",[],["234","235"],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/App.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/serviceWorker.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/polyfill.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/assets/icons/index.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/pages/page500/Page500.js",[],["236","237"],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/pages/page404/Page404.js",[],["238","239"],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/pages/register/Register.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/assets/icons/logo-negative.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/assets/icons/sygnet.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/assets/icons/logo.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/routes.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/icons/flags/Flags.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/icons/brands/Brands.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/icons/coreui-icons/CoreUIIcons.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/index.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/index.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/auth.constants.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/alert.constants.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/url.constants.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/auth.reducers.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/sidebar.constants.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/sidebar.reducers.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/TheLayout.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/index.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheSidebar.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeaderDropdownNotif.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeaderDropdownTasks.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeaderDropdownMssg.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeaderDropdown.js",["240"],"import React from 'react';\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\n\nconst TheHeaderDropdown = () => {\n  return (\n    <CDropdown inNav className='c-header-nav-items mx-2 ' direction='down'>\n      <CDropdownToggle className='c-header-nav-link' caret={false}>\n        <div className='c-avatar'>\n          <CImg\n            src={'avatars/7.jpg'}\n            className='c-avatar-img'\n            alt='admin@simpleapps.go.id'\n          />\n        </div>\n      </CDropdownToggle>\n      <CDropdownMenu className='pt-0 pb-0 ' placement='bottom-end'>\n        <CDropdownItem header tag='div' color='light' className='text-center'>\n          <strong>Account</strong>\n        </CDropdownItem>\n\n        <CDropdownItem>\n          <CIcon name='cil-user' className='mfe-2' />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name='cil-settings' className='mfe-2' />\n          Settings\n        </CDropdownItem>\n\n        <CDropdownItem divider className='pb-0 mb-0' />\n        <CDropdownItem className='text-white bg-danger'>\n          {/* <CIcon name='cil-backspace' className='mfe-2' /> */}\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  );\n};\n\nexport default TheHeaderDropdown;\n","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheHeader.js",["241","242","243","244","245","246"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n  CLink,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\n\n// routes config\nimport routes from '../routes';\n\n// Constants\nimport { sidebarConstants } from '../constants';\n\nimport {\n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n  TheHeaderDropdownTasks,\n} from './index';\n\nconst TheHeader = () => {\n  const dispatch = useDispatch();\n  const sidebarShow = useSelector(\n    ({ sidebarState }) => sidebarState.sidebarShow,\n  );\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow)\n      ? false\n      : 'responsive';\n    dispatch({ type: sidebarConstants.SIDEBAR_STATUS, sidebarShow: val });\n  };\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow)\n      ? true\n      : 'responsive';\n    dispatch({ type: sidebarConstants.SIDEBAR_STATUS, sidebarShow: val });\n  };\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className='ml-md-3 d-lg-none'\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className='ml-3 d-md-down-none'\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className='mx-auto d-lg-none' to='/'>\n        <CIcon name='logo' height='48' alt='Logo' />\n      </CHeaderBrand>\n\n      <CHeaderNav className='d-md-down-none mr-auto'>\n        {/* Left nav section */}\n      </CHeaderNav>\n\n      <CHeaderNav className='px-3'>\n        <TheHeaderDropdown />\n      </CHeaderNav>\n\n      <CSubheader className='px-3 justify-content-between'>\n        <CBreadcrumbRouter\n          className='border-0 c-subheader-nav m-0 px-0 px-md-3'\n          routes={routes}\n        />\n        <div className='d-md-down-none mfe-2 c-subheader-nav'>\n          {/* Subnav right section */}\n        </div>\n      </CSubheader>\n    </CHeader>\n  );\n};\n\nexport default TheHeader;\n","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheFooter.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/TheContent.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/components/_nav.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/Dashboard.js",["247"],"/* eslint-disable no-sequences */\nimport React, { lazy, useEffect } from 'react';\nimport {\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport MainChartExample from '../views/charts/MainChartExample.js';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nconst WidgetsDropdown = lazy(() =>\n  import('../views/widgets/WidgetsDropdown.js'),\n);\n\nconst Dashboard = (props) => {\n  useEffect(() => {\n    props.getDistribusi();\n    props.getSampel();\n  }, []);\n  return (\n    <>\n      <WidgetsDropdown\n        dataDistribusi={\n          props.dataDistribusi.data ? props.dataDistribusi.data : []\n        }\n        dataSampel={props.dataSampel.data ? props.dataSampel.data : []}\n      />\n      <CCard>\n        <CCardBody>\n          <CRow>\n            <CCol sm='5'>\n              <h4 id='traffic' className='card-title mb-0'>\n                Monitoring Jumlah Sampel Masuk\n              </h4>\n              <div className='small text-muted'>Desember 2020</div>\n            </CCol>\n            <CCol sm='7' className='d-none d-md-block'>\n              <CButton color='primary' className='float-right'>\n                <CIcon name='cil-cloud-download' />\n              </CButton>\n              <CButtonGroup className='float-right mr-3'>\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color='outline-secondary'\n                    key={value}\n                    className='mx-0'\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <MainChartExample style={{ height: '300px', marginTop: '40px' }} />\n        </CCardBody>\n      </CCard>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  const { distribusiReducer, sampelReducer } = state;\n  return { dataDistribusi: distribusiReducer, dataSampel: sampelReducer };\n};\n\nexport default connect(mapStateToProps, actions)(Dashboard);\n","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/Distribusi.js",["248","249"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nconst getBadge = (status) => {\n  switch (status) {\n    case 'selesai':\n      return 'success text-white';\n    case 'proses':\n      return 'warning text-white';\n    case 'pending':\n      return 'danger text-white';\n    default:\n      return 'danger text-white';\n  }\n};\nconst fields = [\n  {\n    key: '_userID',\n    label: 'Nama Pemohon',\n  },\n  {\n    key: 'kode_pemeriksaan',\n    label: 'Kode Pemeriksaan',\n  },\n  {\n    key: 'status',\n    label: 'Status',\n  },\n  {\n    key: '_invoiceID',\n    label: 'Tagihan',\n  },\n  {\n    key: 'action',\n    label: 'Aksi',\n  },\n];\n\nconst Distribusi = (props) => {\n  const [modal, setModal] = useState(false);\n  const [item, setItem] = useState();\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const handleDelete = () => {\n    toggle();\n    props.deleteDistribusi(item._id);\n  };\n\n  useEffect(() => {\n    props.getDistribusi();\n  }, []);\n\n  useEffect(() => {\n    props.getDistribusi();\n  }, []);\n\n  return (\n    <>\n      <CRow>\n        <CCol xs='12' lg='12'>\n          <CCard>\n            <CCardHeader>Data Distribusi Pemeriksaan</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={props.data ? props.data : null}\n                fields={fields}\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status === 'pending'\n                          ? 'Pending'\n                          : item.status === 'proses'\n                          ? 'Proses'\n                          : item.status === 'selesai'\n                          ? 'Selesai'\n                          : '-'}\n                      </CBadge>\n                    </td>\n                  ),\n                  _userID: (item) => (\n                    <td>\n                      {item._userID\n                        ? item._userID.nama_lengkap\n                          ? item._userID.nama_lengkap\n                          : ''\n                        : ''}\n                    </td>\n                  ),\n                  _invoiceID: (item) => (\n                    <td>\n                      {item._invoiceID\n                        ? item._invoiceID.invoice_code\n                          ? item._invoiceID.invoice_code\n                          : ''\n                        : ''}\n                    </td>\n                  ),\n                  action: (item) => (\n                    <td>\n                      <Link\n                        to={{ pathname: `/distribusi/${item._id}`, data: item }}\n                      >\n                        <CButton color={'success'} className='mr-1' size='sm'>\n                          <CIcon\n                            className='c-sidebar-brand-minimized'\n                            name={'cilPencil'}\n                            height={35}\n                          />\n                        </CButton>\n                      </Link>\n\n                      <CButton\n                        color={'danger'}\n                        className='mr-1'\n                        size='sm'\n                        onClick={() => {\n                          setItem(item);\n                          toggle();\n                        }}\n                      >\n                        <CIcon\n                          className='c-sidebar-brand-minimized'\n                          name={'cilTrash'}\n                          height={35}\n                        />\n                      </CButton>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n          <CModal id='modalDelete' show={modal} onClose={toggle}>\n            <CModalHeader closeButton>\n              Konfirmasi hapus data pemeriksaan\n            </CModalHeader>\n            <CModalBody>\n              Apakah anda yakin akan menghapus\n              <b> {item ? item._userID.nama_lengkap : ''}</b> ?\n            </CModalBody>\n            <CModalFooter>\n              <CButton color='danger' onClick={() => handleDelete()}>\n                Hapus\n              </CButton>\n              <CButton color='secondary' onClick={toggle}>\n                Batal\n              </CButton>\n            </CModalFooter>\n          </CModal>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  const { distribusiReducer } = state;\n  return distribusiReducer;\n};\n\nexport default connect(mapStateToProps, actions)(Distribusi);\n","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/Login.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/index.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/alert.actions.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/auth.actions.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/alert.reducers.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/distribusi.constants.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/config.constants.js",[],["250","251"],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/distribusi.reducers.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/distribusi.actions.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/Sampel.js",["252","253","254","255"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CForm,\n  CFormGroup,\n  CLabel,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nconst getBadge = (status) => {\n  switch (status) {\n    case 'selesai':\n      return 'success';\n    case 'proses':\n      return 'warning';\n    case 'pending':\n      return 'secondary';\n    default:\n      return 'secondary';\n  }\n};\nconst fields = [\n  {\n    key: 'nama_sampel',\n    label: 'Nama Sampel',\n  },\n  {\n    key: 'varianPengujian',\n    label: 'Varian Pengujian',\n  },\n  {\n    key: 'action',\n    label: 'Aksi',\n  },\n];\n\nconst Sampel = (props) => {\n  const [modal, setModal] = useState(false);\n  const [item, setItem] = useState();\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const handleDelete = () => {\n    toggle();\n    props.deleteSampel(item._id);\n  };\n\n  useEffect(() => {\n    props.getSampel();\n  }, []);\n\n  return (\n    <>\n      <CRow>\n        <CCol xs='12' lg='12'>\n          <CButton\n            color={'primary'}\n            className='mb-1'\n            size='md'\n            onClick={() => props.history.push('/sampel/create')}\n          >\n            <CIcon\n              className='c-sidebar-brand-minimized'\n              name={'cil-pencil'}\n              height={35}\n            />\n            &nbsp;Tambah Data Sampel\n          </CButton>\n          <CCard>\n            <CCardHeader>Data Sampel</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={props.data ? props.data : null}\n                fields={fields}\n                itemsPerPage={10}\n                pagination\n                key='data-sampel'\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status === 'pending'\n                          ? 'Pending'\n                          : item.status === 'proses'\n                          ? 'Proses'\n                          : item.status === 'selesai'\n                          ? 'Selesai'\n                          : '-'}\n                      </CBadge>\n                    </td>\n                  ),\n                  varianPengujian: (item) => (\n                    <td>\n                      {item.varianPengujian.map((val) => {\n                        return (\n                          <>\n                            <CBadge color='info'>\n                              Nama Pengujian : {val.nama_pengujian}\n                            </CBadge>\n                            <p className='m-0'>\n                              <CBadge color='success'>\n                                Harga : {val.harga}\n                              </CBadge>\n                            </p>\n                            <br />\n                          </>\n                        );\n                      })}\n                    </td>\n                  ),\n\n                  action: (item) => (\n                    <td>\n                      <Link\n                        to={{ pathname: `/sampel/${item._id}`, data: item }}\n                      >\n                        <CButton color={'success'} className='mr-1' size='sm'>\n                          <CIcon\n                            className='c-sidebar-brand-minimized'\n                            name={'cilPencil'}\n                            height={35}\n                          />\n                        </CButton>\n                      </Link>\n\n                      <CButton\n                        color={'danger'}\n                        className='mr-1'\n                        size='sm'\n                        onClick={() => {\n                          setItem(item);\n                          toggle();\n                        }}\n                      >\n                        <CIcon\n                          className='c-sidebar-brand-minimized'\n                          name={'cilTrash'}\n                          height={35}\n                        />\n                      </CButton>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n          <CModal id='modalDelete' show={modal} onClose={toggle}>\n            <CModalHeader closeButton>\n              Konfirmasi hapus data sampel\n            </CModalHeader>\n            <CModalBody>\n              Apakah anda yakin akan menghapus\n              <b> {item ? item.nama_sampel : ''}</b> ?\n            </CModalBody>\n            <CModalFooter>\n              <CButton color='danger' onClick={() => handleDelete()}>\n                Hapus\n              </CButton>\n              <CButton color='secondary' onClick={toggle}>\n                Batal\n              </CButton>\n            </CModalFooter>\n          </CModal>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  const { sampelReducer } = state;\n  return sampelReducer;\n};\n\nexport default connect(mapStateToProps, actions)(Sampel);\n","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/constants/sampel.constants.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/reducers/sampel.reducers.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/actions/sampel.actions.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/SampelCreate.js",["256"],"import React, { useState } from 'react';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CRow,\n  CButton,\n  CForm,\n  CLabel,\n  CFormGroup,\n} from '@coreui/react';\nimport { Input, Select, InputNumber } from 'antd';\n\nimport CIcon from '@coreui/icons-react';\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nconst SampelCreate = (props) => {\n  const { control, errors, handleSubmit, reset } = useForm();\n  const [varian, setVarian] = useState([{ nama_pengujian: '', harga: '' }]);\n\n  const handleRemove = (index) => {\n    const list = [...varian];\n    list.splice(index, 1);\n    setVarian(list);\n  };\n  const handleSelectVarian = (value, index) => {\n    const list = [...varian];\n    list[index]['nama_pengujian'] = value;\n    setVarian(list);\n  };\n  const handleInputHarga = (value, index) => {\n    const list = [...varian];\n    list[index]['harga'] = value;\n    setVarian(list);\n  };\n\n  const actionSubmit = (data) => {\n    data.varianPengujian = varian;\n    props.postSampel(data, props.history);\n  };\n\n  const handleReset = () => {\n    reset();\n  };\n  return (\n    <>\n      <CRow>\n        <CCol xs='12' lg='12'>\n          <CCard>\n            <CCardHeader>Buat Sampel</CCardHeader>\n            <CForm onSubmit={handleSubmit(actionSubmit)}>\n              <CCardBody>\n                <CFormGroup row>\n                  <CCol md='3'>\n                    <CLabel>Nama Sampel</CLabel>\n                  </CCol>\n                  <CCol xs='12' md='9'>\n                    <Controller\n                      as={Input}\n                      name='nama_sampel'\n                      type='text'\n                      placeholder='Masukkan Nama Sampel'\n                      autoComplete='nama_sampel'\n                      control={control}\n                      defaultValue=''\n                      rules={{ required: true }}\n                    />\n                    {errors.nama_sampel ? (\n                      <div className='invalid-feedback-custom'>\n                        Nama sampel tidak boleh kosong\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </CCol>\n                </CFormGroup>\n                {varian.map((val, i) => {\n                  return (\n                    <CFormGroup row key={i}>\n                      {i === 0 ? (\n                        <CCol md='3'>\n                          <CLabel>Varian Pengujian</CLabel>\n                        </CCol>\n                      ) : (\n                        <CCol md='3'></CCol>\n                      )}\n                      <CCol xs='12' md='5'>\n                        <Select\n                          name='nama_pengujian'\n                          placeholder='Pilih Jenis Pengujian'\n                          onChange={(val) => handleSelectVarian(val, i)}\n                          style={{ width: '100%' }}\n                          defaultActiveFirstOption={true}\n                        >\n                          <Select.Option key='Kimia' value='Kimia'>\n                            Kimia\n                          </Select.Option>\n                          <Select.Option key='Biologi' value='Biologi'>\n                            Biologi\n                          </Select.Option>\n                        </Select>\n                      </CCol>\n                      <CCol xs='12' md='2'>\n                        <InputNumber\n                          defaultValue={0}\n                          name='harga'\n                          placeholder='Masukkan harga sampel'\n                          formatter={(value) =>\n                            `Rp. ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n                          }\n                          parser={(value) => value.replace(/\\Rp.\\s?|(,*)/g, '')}\n                          autoComplete='harga'\n                          onChange={(e) => handleInputHarga(e, i)}\n                          style={{ width: '100%' }}\n                        />\n                      </CCol>\n                      <CCol xs='12' md='2'>\n                        <CButton\n                          size='sm'\n                          color='primary'\n                          onClick={() =>\n                            setVarian([\n                              ...varian,\n                              {\n                                nama_pengujian: '',\n                                harga: '',\n                              },\n                            ])\n                          }\n                        >\n                          Tambah Varian\n                        </CButton>\n                        &nbsp; &nbsp;\n                        {i !== 0 && (\n                          <CButton\n                            color='danger'\n                            size='sm'\n                            onClick={() => handleRemove(i)}\n                          >\n                            Hapus\n                          </CButton>\n                        )}\n                      </CCol>\n                    </CFormGroup>\n                  );\n                })}\n              </CCardBody>\n              <CCardFooter>\n                <CButton type='submit' size='sm' color='primary'>\n                  <CIcon name='cil-scrubber' /> Submit\n                </CButton>\n                &nbsp;\n                <CButton\n                  type='reset'\n                  onClick={handleReset}\n                  size='sm'\n                  color='danger'\n                >\n                  <CIcon name='cil-ban' /> Reset\n                </CButton>\n              </CCardFooter>\n            </CForm>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default connect(null, actions)(SampelCreate);\n","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/SampelEdit.js",["257"],"import React, { useState, useEffect } from 'react';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CRow,\n  CButton,\n  CForm,\n  CLabel,\n  CFormGroup,\n} from '@coreui/react';\nimport { Input, Select, InputNumber } from 'antd';\n\nimport CIcon from '@coreui/icons-react';\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nconst SampelEdit = (props) => {\n  const { control, errors, handleSubmit, reset } = useForm();\n  const [varian, setVarian] = useState();\n\n  useEffect(() => {\n    setVarian(props.location.data.varianPengujian);\n  }, [props.location.data.varianPengujian]);\n\n  const handleRemove = (index) => {\n    const list = [...varian];\n    list.splice(index, 1);\n    setVarian(list);\n  };\n  const handleSelectVarian = (value, index) => {\n    const list = [...varian];\n    list[index]['nama_pengujian'] = value;\n    setVarian(list);\n  };\n  const handleInputHarga = (value, index) => {\n    const list = [...varian];\n    list[index]['harga'] = value;\n    setVarian(list);\n  };\n\n  const actionSubmit = (data) => {\n    data.varianPengujian = varian;\n    props.updateSampel(props.location.data._id, data, props.history);\n  };\n\n  const handleReset = () => {\n    reset();\n  };\n\n  return (\n    <>\n      <CRow>\n        <CCol xs='12' lg='12'>\n          <CCard>\n            <CCardHeader>\n              Update Data {props.location.data.nama_sampel}\n            </CCardHeader>\n            <CForm onSubmit={handleSubmit(actionSubmit)}>\n              <CCardBody>\n                <CFormGroup row>\n                  <CCol md='3'>\n                    <CLabel>Nama Sampel</CLabel>\n                  </CCol>\n                  <CCol xs='12' md='9'>\n                    <Controller\n                      as={Input}\n                      name='nama_sampel'\n                      type='text'\n                      placeholder='Masukkan Nama Sampel'\n                      autoComplete='nama_sampel'\n                      control={control}\n                      defaultValue={props.location.data.nama_sampel}\n                      rules={{ required: true }}\n                    />\n                    {errors.nama_sampel ? (\n                      <div className='invalid-feedback-custom'>\n                        Nama sampel tidak boleh kosong\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </CCol>\n                </CFormGroup>\n                {varian &&\n                  varian.map((val, i) => {\n                    return (\n                      <CFormGroup row key={i}>\n                        {i === 0 ? (\n                          <CCol md='3'>\n                            <CLabel>Varian Pengujian</CLabel>\n                          </CCol>\n                        ) : (\n                          <CCol md='3'></CCol>\n                        )}\n                        <CCol xs='12' md='5'>\n                          <Select\n                            name='nama_pengujian'\n                            placeholder='Pilih Jenis Pengujian'\n                            onChange={(val) => handleSelectVarian(val, i)}\n                            style={{ width: '100%' }}\n                            defaultActiveFirstOption={true}\n                            defaultValue={\n                              val.nama_pengujian ? val.nama_pengujian : ''\n                            }\n                          >\n                            <Select.Option key='Kimia' value='Kimia'>\n                              Kimia\n                            </Select.Option>\n                            <Select.Option key='Biologi' value='Biologi'>\n                              Biologi\n                            </Select.Option>\n                          </Select>\n                        </CCol>\n                        <CCol xs='12' md='2'>\n                          <InputNumber\n                            defaultValue={val.harga ? val.harga : 0}\n                            name='harga'\n                            placeholder='Masukkan harga sampel'\n                            formatter={(value) =>\n                              `Rp. ${value}`.replace(\n                                /\\B(?=(\\d{3})+(?!\\d))/g,\n                                ',',\n                              )\n                            }\n                            parser={(value) =>\n                              value.replace(/\\Rp.\\s?|(,*)/g, '')\n                            }\n                            autoComplete='harga'\n                            onChange={(e) => handleInputHarga(e, i)}\n                            style={{ width: '100%' }}\n                          />\n                        </CCol>\n                        <CCol xs='12' md='2'>\n                          <CButton\n                            size='sm'\n                            color='primary'\n                            onClick={() =>\n                              setVarian([\n                                ...varian,\n                                {\n                                  nama_pengujian: '',\n                                  harga: '',\n                                },\n                              ])\n                            }\n                          >\n                            Tambah Varian\n                          </CButton>\n                          &nbsp; &nbsp;\n                          {i !== 0 && (\n                            <CButton\n                              color='danger'\n                              size='sm'\n                              onClick={() => handleRemove(i)}\n                            >\n                              Hapus\n                            </CButton>\n                          )}\n                        </CCol>\n                      </CFormGroup>\n                    );\n                  })}\n              </CCardBody>\n              <CCardFooter>\n                <CButton type='submit' size='sm' color='primary'>\n                  <CIcon name='cil-scrubber' /> Submit\n                </CButton>\n                &nbsp;\n                <CButton\n                  type='reset'\n                  onClick={handleReset}\n                  size='sm'\n                  color='danger'\n                >\n                  <CIcon name='cil-ban' /> Reset\n                </CButton>\n              </CCardFooter>\n            </CForm>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default connect(null, actions)(SampelEdit);\n","/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/charts/MainChartExample.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/widgets/WidgetsDropdown.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/views/charts/ChartLineSimple.js",[],"/home/maxxoto/Desktop/Projects/College Projects/SimpelApps-Admin/src/pages/DistribusiEdit.js",["258","259"],"import React, { useState, useEffect } from 'react';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CCol,\n  CRow,\n  CButton,\n  CForm,\n  CLabel,\n  CFormGroup,\n} from '@coreui/react';\nimport { Input, Select } from 'antd';\n\nimport CIcon from '@coreui/icons-react';\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nconst DistribusiEdit = (props) => {\n  const { control, errors, handleSubmit, reset } = useForm();\n\n  const actionSubmit = (data) => {\n    props.updateDistribusi(props.location.data._id, data, props.history);\n  };\n\n  const handleReset = () => {\n    reset();\n  };\n\n  return (\n    <>\n      <CRow>\n        <CCol xs='12' lg='12'>\n          <CCard>\n            <CCardHeader>\n              Update Data {props.location.data._userID.nama_lengkap}\n            </CCardHeader>\n            <CForm onSubmit={handleSubmit(actionSubmit)}>\n              <CCardBody>\n                <CFormGroup row>\n                  <CCol md='3'>\n                    <CLabel>Nama Pemohon</CLabel>\n                  </CCol>\n                  <CCol xs='12' md='9'>\n                    <Controller\n                      as={Input}\n                      name='_userID'\n                      type='text'\n                      placeholder=''\n                      control={control}\n                      readOnly={true}\n                      defaultValue={\n                        props.location.data._userID\n                          ? props.location.data._userID.nama_lengkap\n                          : ''\n                      }\n                      rules={{ required: true }}\n                    />\n                    {errors._userID ? (\n                      <div className='invalid-feedback-custom'>\n                        Nama pemohon tidak boleh kosong\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md='3'>\n                    <CLabel>Kode Pemeriksaan</CLabel>\n                  </CCol>\n\n                  <CCol xs='12' md='9'>\n                    <Controller\n                      as={Input}\n                      name='kode_pemeriksaan'\n                      type='text'\n                      placeholder='Masukkan Kode Pemeriksaan'\n                      autoComplete='kode_pemeriksaan'\n                      control={control}\n                      readOnly={true}\n                      defaultValue={\n                        props.location.data.kode_pemeriksaan\n                          ? props.location.data.kode_pemeriksaan\n                          : ''\n                      }\n                      rules={{ required: true }}\n                    />\n                    {errors.kode_pemeriksaan ? (\n                      <div className='invalid-feedback-custom'>\n                        Kode pemeriksaan tidak boleh kosong\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md='3'>\n                    <CLabel>Status</CLabel>\n                  </CCol>\n                  <CCol xs='12' md='9'>\n                    <Controller\n                      as={Select}\n                      name='status'\n                      type='text'\n                      placeholder='Pilih status'\n                      control={control}\n                      defaultValue={\n                        props.location.data.status\n                          ? props.location.data.status\n                          : ''\n                      }\n                      rules={{ required: true }}\n                    >\n                      <Select.Option key='pending' value='pending'>\n                        Pending\n                      </Select.Option>\n                      <Select.Option key='proses' value='proses'>\n                        Proses\n                      </Select.Option>\n                      <Select.Option key='selesai' value='selesai'>\n                        Selesai\n                      </Select.Option>\n                    </Controller>\n                    {errors.status ? (\n                      <div className='invalid-feedback-custom'>\n                        Kode pemeriksaan tidak boleh kosong\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md='3'>\n                    <CLabel>Tagihan</CLabel>\n                  </CCol>\n\n                  <CCol xs='12' md='9'>\n                    <Controller\n                      as={Input}\n                      name='_invoiceID'\n                      type='text'\n                      placeholder='Pilih tagihan'\n                      autoComplete='_invoiceID'\n                      control={control}\n                      readOnly={true}\n                      defaultValue={\n                        props.location.data._invoiceID\n                          ? props.location.data._invoiceID.invoice_code\n                          : ''\n                      }\n                      rules={{ required: true }}\n                    />\n                    {errors._invoiceID ? (\n                      <div className='invalid-feedback-custom'>\n                        Invoice tidak boleh kosong\n                      </div>\n                    ) : (\n                      ''\n                    )}\n                  </CCol>\n                </CFormGroup>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type='submit' size='sm' color='primary'>\n                  <CIcon name='cil-scrubber' /> Submit\n                </CButton>\n                &nbsp;\n                <CButton\n                  type='reset'\n                  onClick={handleReset}\n                  size='sm'\n                  color='danger'\n                >\n                  <CIcon name='cil-ban' /> Reset\n                </CButton>\n              </CCardFooter>\n            </CForm>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default connect(null, actions)(DistribusiEdit);\n",{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"260","replacedBy":"264"},{"ruleId":"262","replacedBy":"265"},{"ruleId":"260","replacedBy":"266"},{"ruleId":"262","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":3,"column":3,"nodeType":"270","messageId":"271","endLine":3,"endColumn":9},{"ruleId":"268","severity":1,"message":"272","line":8,"column":3,"nodeType":"270","messageId":"271","endLine":8,"endColumn":17},{"ruleId":"268","severity":1,"message":"273","line":9,"column":3,"nodeType":"270","messageId":"271","endLine":9,"endColumn":17},{"ruleId":"268","severity":1,"message":"274","line":12,"column":3,"nodeType":"270","messageId":"271","endLine":12,"endColumn":8},{"ruleId":"268","severity":1,"message":"275","line":24,"column":3,"nodeType":"270","messageId":"271","endLine":24,"endColumn":24},{"ruleId":"268","severity":1,"message":"276","line":25,"column":3,"nodeType":"270","messageId":"271","endLine":25,"endColumn":25},{"ruleId":"268","severity":1,"message":"277","line":26,"column":3,"nodeType":"270","messageId":"271","endLine":26,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":25,"column":6,"nodeType":"280","endLine":25,"endColumn":8,"suggestions":"281"},{"ruleId":"278","severity":1,"message":"279","line":72,"column":6,"nodeType":"280","endLine":72,"endColumn":8,"suggestions":"282"},{"ruleId":"278","severity":1,"message":"279","line":76,"column":6,"nodeType":"280","endLine":76,"endColumn":8,"suggestions":"283"},{"ruleId":"260","replacedBy":"284"},{"ruleId":"262","replacedBy":"285"},{"ruleId":"268","severity":1,"message":"286","line":16,"column":3,"nodeType":"270","messageId":"271","endLine":16,"endColumn":8},{"ruleId":"268","severity":1,"message":"287","line":17,"column":3,"nodeType":"270","messageId":"271","endLine":17,"endColumn":13},{"ruleId":"268","severity":1,"message":"288","line":18,"column":3,"nodeType":"270","messageId":"271","endLine":18,"endColumn":9},{"ruleId":"278","severity":1,"message":"279","line":67,"column":6,"nodeType":"280","endLine":67,"endColumn":8,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":116,"column":61,"nodeType":"292","messageId":"293","endLine":116,"endColumn":62,"suggestions":"294"},{"ruleId":"290","severity":1,"message":"291","line":131,"column":46,"nodeType":"292","messageId":"293","endLine":131,"endColumn":47,"suggestions":"295"},{"ruleId":"268","severity":1,"message":"296","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":25},{"ruleId":"268","severity":1,"message":"297","line":1,"column":27,"nodeType":"270","messageId":"271","endLine":1,"endColumn":36},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],["298"],["299"],["298"],["299"],"no-unused-vars","'CBadge' is defined but never used.","Identifier","unusedVar","'CHeaderNavItem' is defined but never used.","'CHeaderNavLink' is defined but never used.","'CLink' is defined but never used.","'TheHeaderDropdownMssg' is defined but never used.","'TheHeaderDropdownNotif' is defined but never used.","'TheHeaderDropdownTasks' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["300"],["301"],["302"],["298"],["299"],"'CForm' is defined but never used.","'CFormGroup' is defined but never used.","'CLabel' is defined but never used.",["303"],"no-useless-escape","Unnecessary escape character: \\R.","Literal","unnecessaryEscape",["304","305"],["306","307"],"'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},{"desc":"308","fix":"310"},{"desc":"308","fix":"311"},{"desc":"308","fix":"312"},{"messageId":"313","fix":"314","desc":"315"},{"messageId":"316","fix":"317","desc":"318"},{"messageId":"313","fix":"319","desc":"315"},{"messageId":"316","fix":"320","desc":"318"},"Update the dependencies array to be: [props]",{"range":"321","text":"322"},{"range":"323","text":"322"},{"range":"324","text":"322"},{"range":"325","text":"322"},"removeEscape",{"range":"326","text":"327"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"328","text":"329"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"330","text":"327"},{"range":"331","text":"329"},[563,565],"[props]",[1265,1267],[1323,1325],[1147,1149],[3847,3848],"",[3847,3847],"\\",[4455,4456],[4455,4455]]